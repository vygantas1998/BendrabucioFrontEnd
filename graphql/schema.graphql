input AddWashingMashineInput {
  title: String
  image_url: String
  description: String
  clientMutationId: String
}

type AddWashingMashinePayload {
  washingMashineEdge: WashingMachineEdge!
  clientMutationId: String
}

type Mutation {
  addWashingMachine(input: AddWashingMashineInput!): AddWashingMashinePayload
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Query {
  store: Store

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Shower implements Node {
  """The ID of an object"""
  id: ID!
  type: String
  description: String
  created_at: String
  updated_at: String
}

"""A connection to a list of items."""
type ShowerConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ShowerEdge]
}

"""An edge in a connection."""
type ShowerEdge {
  """The item at the end of the edge"""
  node: Shower

  """A cursor for use in pagination"""
  cursor: String!
}

type ShowerReservation implements Node {
  """The ID of an object"""
  id: ID!
  shower_id: String
  reservation_start_time: String
  reservation_end_time: String
  created_at: String
  updated_at: String
}

"""A connection to a list of items."""
type ShowerReservationConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ShowerReservationEdge]
}

"""An edge in a connection."""
type ShowerReservationEdge {
  """The item at the end of the edge"""
  node: ShowerReservation

  """A cursor for use in pagination"""
  cursor: String!
}

type Store {
  washingMachines(after: String, first: Int, before: String, last: Int): WashingMachineConnection!
  showers(after: String, first: Int, before: String, last: Int): ShowerConnection!
  showerReservations(after: String, first: Int, before: String, last: Int): ShowerReservationConnection!
  washingMashineReservations(after: String, first: Int, before: String, last: Int): WashingMashineReservationConnection!
}

type WashingMachine implements Node {
  """The ID of an object"""
  id: ID!
  title: String
  image_url: String
  description: String
  created_at: String
  updated_at: String
}

"""A connection to a list of items."""
type WashingMachineConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [WashingMachineEdge]
}

"""An edge in a connection."""
type WashingMachineEdge {
  """The item at the end of the edge"""
  node: WashingMachine

  """A cursor for use in pagination"""
  cursor: String!
}

type WashingMashineReservation implements Node {
  """The ID of an object"""
  id: ID!
  washingMashine_id: String
  reservation_start_time: String
  reservation_end_time: String
  created_at: String
  updated_at: String
}

"""A connection to a list of items."""
type WashingMashineReservationConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [WashingMashineReservationEdge]
}

"""An edge in a connection."""
type WashingMashineReservationEdge {
  """The item at the end of the edge"""
  node: WashingMashineReservation

  """A cursor for use in pagination"""
  cursor: String!
}
